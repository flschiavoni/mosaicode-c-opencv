# -*- coding: utf-8 -*-
"""
This module contains the CTemplate class.
"""
from mosaicode.model.codetemplate import CodeTemplate
from mosaicode.GUI.fieldtypes import *

class Cfile(CodeTemplate):
    """
    This class contains methods related the CTemplate class.
    """

    def __init__(self):
        CodeTemplate.__init__(self)
        self.name = "opencv"
        self.language = "c"
        self.description = "c / opencv code template"
        self.command = "make run\n"
        self.code_parts = ["include", "function", "declaration", "execution", "deallocation"]

        self.files["main.c"] = r"""
        
/*
* Generated by Mosaicode
*	$name$
*	$description$
*	Developed by: $author$
*	Using $license$
*/

#ifdef _CH_
#pragma package <opencv>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include "opencv2/core.hpp"
#include "opencv2/opencv.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui.hpp"
#include "opencv2/objdetect.hpp"
#include "opencv2/calib3d/calib3d.hpp"
#include "opencv2/features2d/features2d.hpp"

using namespace cv;
using namespace std;
$single_code[include]$

$single_code[function]$

#define FRAMERATE 1000.0 / 25.0

int main(int argc, char ** argv){
    char key = ' ';
    $code[declaration]$
    while((key = (char)waitKey(FRAMERATE)) != 27){
        $code[execution, connection]$
        $code[deallocation]$
    }

    destroyAllWindows();
    return 0;
}
"""

        self.files["function.c"] = r"""
#include "opencv2/core.hpp"
using namespace cv;
"""

        self.files["Makefile"] = r"""
# Generated by Mosaicode and cfile template to opencv lib blocks
SRCDIR := $dir_name$
OBJDIR := $dir_name$
CFLAGS := `pkg-config --cflags --libs opencv`

run: clean main
	$(OBJDIR)./main

main: main.c
	g++ \
	$(SRCDIR)function.c \
	$(SRCDIR)main.c \
	-o $(OBJDIR)main $(CFLAGS)

clean:
	rm -rf 	$(OBJDIR)main

"""

#----------------------------------------------------------------------
